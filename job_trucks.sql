--Update - Marcação Trucks

UPDATE ETL_CAMINHOES_2 TC SET IDVEHICLE = (SELECT IDVEHICLE FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)   
,IDDEALER = (SELECT IDDEALER FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER) 
,DSORIGINALMODEL = (SELECT DSORIGINALMODEL FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER) 
,DTPURCHASE = (SELECT DTPURCHASE FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER) 
,CDTMA = (SELECT CDTMA FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER) 
,DSMAKER = (SELECT DSMAKER FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER) 
,IDADDRESS = (SELECT IDADDRESS FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
,TPSTREET = (SELECT TPSTREET FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
,DSADDRESS = (SELECT DSADDRESS FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
,NBADDRESS = (SELECT NBADDRESS FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
,DSCOMPLEMENT = (SELECT DSCOMPLEMENT FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
,NMDISTRICT = (SELECT NMDISTRICT FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
,NBPOSTALCODE = (SELECT NBPOSTALCODE FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
,DSCITY = (SELECT DSCITY FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
,IDTELEPHONE = (SELECT IDTELEPHONE FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
,NBAREACODE = (SELECT NBAREACODE FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
,NBTELEPHONE = (SELECT NBTELEPHONE FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
,IDEMAIL = (SELECT IDEMAIL FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
,DSEMAIL = (SELECT DSEMAIL FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
WHERE EXISTS (SELECT 1 FROM TC_CAMINHOES_2 TCE WHERE TC.IDVEHICLEHOLDER = TCE.IDVEHICLEHOLDER)
AND COLUNA_INSERT_PES_VEI_NOVO NOT IN ('SIM') -- COLOCAR O ULTIMO BLOCO PARA ATUALIZAR OS OUTROS / NOT IN

--Insert - Existentes / EM. TL e AD

INSERT INTO TC_CAMINHOES_2
SELECT CDB.*
,AD.IDADDRESS
,AD.TPSTREET
,AD.DSADDRESS
,AD.NBADDRESS
,AD.DSCOMPLEMENT
,AD.NMDISTRICT
,AD.NBPOSTALCODE
,AD.DSCITY
,AD.CDSTATE
,TL.IDTELEPHONE
,TL.NBAREACODE
,TL.NBTELEPHONE
,EM.IDEMAIL
,EM.DSEMAIL
FROM TC_CAMINHOES CDB
,(SELECT AD.*, RANK() OVER(PARTITION BY IDPERSON ORDER BY DTLASTUPDATE DESC, IDADDRESS DESC) RANK_AD 
FROM FORD.ADDRESS AD WHERE CDNIXIETYPE IS NULL AND FLUSEROW = 'S') AD
,(SELECT TL.*, RANK() OVER(PARTITION BY IDPERSON ORDER BY DTLASTUPDATE DESC, IDTELEPHONE DESC) RANK_TL
FROM FORD.TELEPHONE TL  WHERE CDNIXIETYPE IS NULL AND FLUSEROW = 'S') TL
,(SELECT EM.*, RANK() OVER(PARTITION BY IDPERSON ORDER BY DTLASTUPDATE DESC, IDEMAIL DESC) RANK_EM
FROM FORD.EMAIL EM WHERE CDNIXIETYPE IS NULL AND FLUSEROW = 'S') EM  
WHERE CDB.IDVEHICLEHOLDER = EM.IDPERSON(+)
AND CDB.IDVEHICLEHOLDER = TL.IDPERSON(+)
AND CDB.IDVEHICLEHOLDER = AD.IDPERSON(+)
AND EM.RANK_EM(+) = 1
AND TL.RANK_TL(+) = 1
AND AD.RANK_AD(+) = 1


--Insert - Existentes / Atualizar Dados

INSERT INTO TC_CAMINHOES
SELECT LCW.* FROM ETL_CAMINHOES_2 TC,
(
SELECT      
IDVEHICLE,IDDEALER,IDVEHICLEHOLDER,DSORIGINALMODEL,NBMODELYEAR,NBMANUFACTURERYEAR,DTPURCHASE,FLFIRSTOWNER,FLNEWVEHICLE,FLSTILLOWNED,CDTMA,DSMAKER,RANK
FROM   (SELECT   V.IDVEHICLE,CASE WHEN R.IDDEALER = '999999999' THEN TO_NUMBER(VF.IDDEALERDELIVER) ELSE R.IDDEALER END AS IDDEALER,R.IDVEHICLEHOLDER,V.DSORIGINALMODEL,V.NBMODELYEAR,V.NBMANUFACTURERYEAR,R.DTPURCHASE,R.FLFIRSTOWNER,R.FLNEWVEHICLE,R.FLSTILLOWNED,VF.CDTMA,
MM.DSMAKER,
ROW_NUMBER()OVER(PARTITION BY R.IDVEHICLEHOLDER ORDER BY R.DTPURCHASE DESC, R.IDVEHICLE DESC)RANK
FROM   FORD.VEHICLERELATIONSHIP R
, FORD.VEHICLE V
, FORD.VEHICLEFACT VF
, FORD.MAKERMODEL MM
,ETL_CAM_MODELOS AA
WHERE    (V.IDVEHICLE = R.IDVEHICLE)
AND (V.DSORIGINALMODEL = MM.DSORIGINALMODEL)
AND (V.IDVEHICLE = VF.IDVEHICLE)
AND (MM.DSMODEL = AA.DSMODEL OR MM.DSORIGINALMODEL = AA.DSORIGINALMODEL OR MM.DSGENERICMODEL = AA.DSGENERICMODEL)
) A
WHERE   A.RANK = 1 AND A.FLSTILLOWNED = 'S'
)LCW
WHERE TC.IDVEHICLEHOLDER = LCW.IDVEHICLEHOLDER
AND TC.IDVEHICLE <> LCW.IDVEHICLE
AND TC.COLUNA_INSERT_PES_VEI_NOVO NOT IN ('SIM')

--Insert - Tabela de Trucks

INSERT INTO ETL_CAMINHOES_2
SELECT AA.IDVEHICLE
,AA.IDVEHICLEHOLDER
,AA.DSORIGINALMODEL
,AA.IDDATASOURCE
,AA.DTLASTUPDATE
,AA.IDCREATESOURCE
,AA.DTCREATE
,AA.IDDEALER
,AA.DTPURCHASE
,AA.DSVIN
,AA.CDTMA
,AA.DSMAKER
,AA.DSMODEL
,AA.DSGENERICMODEL
,AA.DSCATEGORY
,AA.DSSEGMENT
,P.IDPERSON
,P.TPPERSON
,COALESCE(I.CPF,COM.CNPJ) AS CPF_CNPJ
,COALESCE(I.NMINDIVIDUAL,COM.NMCOMPANY) AS NOME
,CORG.CDSUBCLASS
,CASE  WHEN (TRIM(AD.CDSTATE) in ('MA','PI','CE','RN','PE','PB','SE','AL','BA'))    THEN 'NORDESTE'
       WHEN (TRIM(AD.CDSTATE) in ('AM','RR','AP','PA','TO','RO','AC'))              THEN 'NORTE'
       WHEN (TRIM(AD.CDSTATE) in ('MT','MS','GO','DF'))                             THEN 'CENTRO-OESTE'
       WHEN (TRIM(AD.CDSTATE) in ('SP','RJ','ES','MG'))                             THEN 'SUDESTE'
       WHEN (TRIM(AD.CDSTATE) in ('PR','RS','SC'))                                  THEN 'SUL'
       ELSE 'N/I' END REGIAO
,AD.IDADDRESS
,AD.TPSTREET
,AD.DSADDRESS
,AD.NBADDRESS
,AD.DSCOMPLEMENT
,AD.NMDISTRICT
,AD.NBPOSTALCODE
,AD.DSCITY
,AD.CDSTATE
,TL.IDTELEPHONE
,TL.NBAREACODE
,TL.NBTELEPHONE
,EM.IDEMAIL
,EM.DSEMAIL
,NULL TAMANHO_DA_FROTA
,NULL DESC_FROTA
,NULL PURGE_EMAIL
,NULL FLOPTIN
,NULL ERROS_VT
,'SIM' AS COLUNA_INSERT_PES_VEI_NOVO
,NULL FANTASIA_DN
,NULL DESCRICAO
,NULL ENDERECO_DN
,NULL BAIRRO_DN
,NULL CIDADE_DN
,NULL UF_DN
,NULL RG_DN
,NULL CEP_DN
,NULL TELEFONE_DN
,NULL FAX_DN
,NULL GERENTE_DN
,NULL DATA_ULT_VIS
FROM
(
SELECT * FROM 
(
SELECT V.IDVEHICLE
,VR.IDVEHICLEHOLDER
,V.DSORIGINALMODEL
,VR.IDDATASOURCE
,VR.DTLASTUPDATE
,VR.IDCREATESOURCE
,VR.DTCREATE
,CASE WHEN VR.IDDEALER = '999999999' THEN TO_NUMBER(VF.IDDEALERDELIVER) ELSE VR.IDDEALER END AS IDDEALER
,VR.DTPURCHASE
,VF.DSVIN
,VF.CDTMA
,MM.DSMAKER
,MM.DSMODEL
,MM.DSGENERICMODEL
,MM.DSCATEGORY
,MM.DSSEGMENT
,ROW_NUMBER()OVER(PARTITION BY VR.IDVEHICLEHOLDER ORDER BY VR.DTPURCHASE DESC, VR.IDVEHICLE DESC)RANK_VR
FROM FORD.VEHICLE V
,FORD.VEHICLERELATIONSHIP VR
,FORD.VEHICLEFACT VF
,FORD.MAKERMODEL MM
,ETL_CAM_MODELOS AA
WHERE V.IDVEHICLE = VR.IDVEHICLE
AND V.IDVEHICLE = VF.IDVEHICLE
AND V.DSORIGINALMODEL = MM.DSORIGINALMODEL
AND (MM.DSMODEL = AA.DSMODEL OR MM.DSORIGINALMODEL = AA.DSORIGINALMODEL OR MM.DSGENERICMODEL = AA.DSGENERICMODEL)
AND VF.CDTMA NOT IN ('BDA','KHC','KFA','GDA','FHC','FFC','NFB','NFA','FAD','BFA','BFC','BHC','CFA',
                    'CHC','EUA','BUA','FFA','FFB','EEF','2BC','4BC','3BB','4BB','6BC','7BC','6BB','7BB')
AND MM.DSMAKER = 'FORD'
AND VR.DTPURCHASE BETWEEN TO_DATE('01/01/2016','DD/MM/YYYY') AND TO_DATE(SYSDATE,'DD/MM/YY')
) WHERE RANK_VR = 1 
)AA
,FORD.PERSON P
,FORD.COMPANY COM
,FORD.CORPOGRAPHICS CORG
,FORD.INDIVIDUAL I
,(SELECT AD.*, RANK() OVER(PARTITION BY IDPERSON ORDER BY DTLASTUPDATE DESC, IDADDRESS DESC) RANK_AD 
FROM FORD.ADDRESS AD
WHERE CDNIXIETYPE IS NULL
AND FLUSEROW = 'S')   AD
,(SELECT TL.*, RANK() OVER(PARTITION BY IDPERSON ORDER BY DTLASTUPDATE DESC, IDTELEPHONE DESC) RANK_TL
FROM FORD.TELEPHONE   TL
WHERE CDNIXIETYPE IS NULL
AND FLUSEROW = 'S')   TL
,(SELECT EM.*, RANK() OVER(PARTITION BY IDPERSON ORDER BY DTLASTUPDATE DESC, IDEMAIL DESC) RANK_EM
FROM FORD.EMAIL EM
WHERE CDNIXIETYPE IS NULL
AND FLUSEROW = 'S')   EM      
WHERE AA.IDVEHICLEHOLDER = P.IDPERSON
AND P.IDPERSON = I.IDINDIVIDUAL(+)
AND P.IDPERSON = COM.IDCOMPANY(+)
AND COM.IDCOMPANY = CORG.IDCOMPANY(+)
AND P.IDPERSON = EM.IDPERSON(+)
AND P.IDPERSON = TL.IDPERSON(+)
AND P.IDPERSON = AD.IDPERSON(+)
AND EM.RANK_EM(+) = 1
AND TL.RANK_TL(+) = 1
AND AD.RANK_AD(+) = 1
AND NOT EXISTS(SELECT TC.* FROM ETL_CAMINHOES_2 TC WHERE (AA.IDVEHICLEHOLDER = TC.IDVEHICLEHOLDER))
AND NOT EXISTS(SELECT TC.* FROM ETL_CAMINHOES_2 TC WHERE (AA.IDVEHICLE = TC.IDVEHICLE))


--Update Flag - Inserção

UPDATE ETL_CAMINHOES_2 SET COLUNA_INSERT_PES_VEI_NOVO = 'NAO'

--Insert - Tabela Frota

INSERT INTO ETL_CAMINHOES_TODOS
SELECT AA.IDVEHICLE
,AA.IDVEHICLEHOLDER
,AA.DSORIGINALMODEL
,AA.IDDATASOURCE
,AA.DTLASTUPDATE
,AA.IDCREATESOURCE
,AA.DTCREATE
,AA.IDDEALER
,AA.DTPURCHASE
,AA.DSVIN
,AA.CDTMA
,AA.DSMAKER
,AA.DSMODEL
,AA.DSGENERICMODEL
,AA.DSCATEGORY
,AA.DSSEGMENT
,AA.RANK_VR
FROM 
(
SELECT V.IDVEHICLE
,VR.IDVEHICLEHOLDER
,V.DSORIGINALMODEL
,VR.IDDATASOURCE
,VR.DTLASTUPDATE
,VR.IDCREATESOURCE
,VR.DTCREATE
,CASE WHEN VR.IDDEALER = '999999999' THEN TO_NUMBER(VF.IDDEALERDELIVER) ELSE VR.IDDEALER END AS IDDEALER
,VR.DTPURCHASE
,VF.DSVIN
,VF.CDTMA
,MM.DSMAKER
,MM.DSMODEL
,MM.DSGENERICMODEL
,MM.DSCATEGORY
,MM.DSSEGMENT
,ROW_NUMBER()OVER(PARTITION BY VR.IDVEHICLEHOLDER ORDER BY VR.DTPURCHASE DESC, VR.IDVEHICLE DESC)RANK_VR
FROM FORD.VEHICLE V
,FORD.VEHICLERELATIONSHIP VR
,FORD.VEHICLEFACT VF
,FORD.MAKERMODEL MM
,ETL_CAM_MODELOS AA
WHERE
V.IDVEHICLE = VR.IDVEHICLE
AND V.IDVEHICLE = VF.IDVEHICLE
AND V.DSORIGINALMODEL = MM.DSORIGINALMODEL
AND (MM.DSMODEL = AA.DSMODEL OR MM.DSORIGINALMODEL = AA.DSORIGINALMODEL OR MM.DSGENERICMODEL = AA.DSGENERICMODEL)
AND MM.DSMAKER = 'FORD' AND VR.DTPURCHASE BETWEEN TO_DATE('01/01/2000','DD/MM/YYYY') AND TO_DATE(SYSDATE,'DD/MM/YY')
)AA

--Update - Frotas / Quantidades

UPDATE ETL_CAMINHOES_2 RS SET RS.TAMANHO_DA_FROTA = (SELECT COUNT(RV.IDVEHICLE) 
FROM ETL_CAMINHOES_TODOS RV WHERE RV.IDVEHICLEHOLDER = RS.IDVEHICLEHOLDER)
WHERE EXISTS (SELECT 1 FROM ETL_CAMINHOES_TODOS RV WHERE RV.IDVEHICLEHOLDER = RS.IDVEHICLEHOLDER)


--Update - Frotas

UPDATE ETL_CAMINHOES_2 SET TAMANHO_DA_FROTA = 1 
WHERE TAMANHO_DA_FROTA IS NULL
AND IDVEHICLE IS NOT NULL

--Update - Frotas / Descrição

UPDATE ETL_CAMINHOES_2 SET DESC_FROTA =
CASE 
WHEN TAMANHO_DA_FROTA = 1 THEN 'AUTONOMO'
WHEN TAMANHO_DA_FROTA BETWEEN 2 AND 7 THEN 'PEQUENO'
WHEN TAMANHO_DA_FROTA BETWEEN 8 AND 59 THEN 'MEDIO'
WHEN TAMANHO_DA_FROTA >= 60 THEN 'GRANDE'
ELSE NULL END               


--Update - Lista de DN's / Trucks

UPDATE ETL_CAMINHOES_2 AA SET AA.FANTASIA_DN  = (SELECT BB.FANTASIA FROM LISTA_DNS_CAMINHOES_2 BB
WHERE AA.IDDEALER = BB.IDDEALER)
,AA.ENDERECO_DN  = (SELECT BB.ENDERECO FROM LISTA_DNS_CAMINHOES_2 BB WHERE AA.IDDEALER = BB.IDDEALER)
,AA.BAIRRO_DN    = (SELECT BB.BAIRRO FROM LISTA_DNS_CAMINHOES_2 BB WHERE AA.IDDEALER = BB.IDDEALER)
,AA.CIDADE_DN    = (SELECT BB.CIDADE FROM LISTA_DNS_CAMINHOES_2 BB WHERE AA.IDDEALER = BB.IDDEALER)
,AA.UF_DN        = (SELECT BB.UF FROM LISTA_DNS_CAMINHOES_2 BB WHERE AA.IDDEALER = BB.IDDEALER)
,AA.CEP_DN       = (SELECT BB.CEP FROM LISTA_DNS_CAMINHOES_2 BB WHERE AA.IDDEALER = BB.IDDEALER)
,AA.TELEFONE_DN  = (SELECT BB.TELEFONE FROM LISTA_DNS_CAMINHOES_2 BB WHERE AA.IDDEALER = BB.IDDEALER)
,AA.GERENTE_DN   = (SELECT BB.GERENTE_VENDAS FROM LISTA_DNS_CAMINHOES_2 BB WHERE AA.IDDEALER = BB.IDDEALER)
WHERE EXISTS (SELECT 1 FROM LISTA_DNS_CAMINHOES_2 BB WHERE AA.IDDEALER = BB.IDDEALER)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--TABELAS NA QUERY

--tabelas ford

FORD.ADDRESS
FORD.TELEPHONE
FORD.EMAIL
FORD.VEHICLERELATIONSHIP
FORD.VEHICLE
FORD.VEHICLEFACT
FORD.MAKERMODEL
FORD.PERSON
FORD.COMPANY
FORD.CORPOGRAPHICS
FORD.INDIVIDUAL

--tabelas nao criadas ou truncadas no job

ETL_CAMINHOES_2

--Descrição:listagem de caminhoes,com seus respectivos donos e dealers que venderam os mesmos

--Acoes no script:

-- campos da mesma sao atualizados a partir de infos da tabela tc_caminhoes_2
--recebe informacoes com insert a partir de tabelas ford( FORD.PERSON ,FORD.COMPANY ,FORD.CORPOGRAPHICS ,FORD.INDIVIDUAL, FORD.VEHICLE,FORD.VEHICLERELATIONSHIP ,FORD.VEHICLEFACT ,FORD.MAKERMODEL ,ETL_CAM_MODELOS,FORD.ADDRESS, FORD.TELEPHONE,FORD.EMAIL)
--flag  COLUNA_INSERT_PES_VEI_NOVO é atualizada para 'nao',assim como updates sao feitos adicionando infos calculadas(tamanho da frota,endereco de dealaer)

ETL_CAM_MODELOS

--Descrição: de para mostrando nome do modelo inteiro do caminhao para nome do modelo generico,exemplo:modelo inteiro:FORD/CARGO 814 TECAR PAS,modelo generico:B-12000

--Acoes no script:

--consulta de campos para serem adicionados dentro de insert de tabelas TC_CAMINHOES,ETL_CAMINHOES_2,ETL_CAMINHOES_TODOS

LISTA_DNS_CAMINHOES_2


--Descrição: listagem de dealers de caminhoes com suas respectivas informacoes de endereco,gerentes,nome,id e descricao

--Acoes no script:

--tabela é consultada para atualizar informacoes de endereco e gerente da tabela ETL_CAMINHOES_2


--tabelas truncadas

TC_CAMINHOES_2 --TRUNCATE
TC_CAMINHOES--TRUNCATE
ETL_CAMINHOES_TODOS--TRUNCATE

--tabela nao nao criada,nao truncada e nao utilizada no job

TB_OPENS_DEDUP_TAB1 

--Descrição: Listagem de enderecos de emails com data de leitura

--Acoes no script:

--nenhuma