

INSERT INTO TAB_PROC_LEAD_HIST
SELECT CPF
     , SUB_ORIGEM                       AS ORIGEM
     , TMA
     , TO_DATE(DATA_CRIACAO,'DD/MM/YY') AS DATA_CRIACAO
     , DD.MODELO_FE                     AS MODELO_INTERESSE
     , 'SALESFORCE'                     AS SISTEMA
     , ROW_NUMBER () OVER (PARTITION BY CPF,DATA_CRIACAO ORDER BY CPF,DATA_CRIACAO) AS ROWNO
     , LEADS_MENSAL_SEQ.NEXTVAL
     , ID_PRINCIPAL
     , TEMPO_ATENDIMENTO -- SELECT *
  FROM TAB_PROC_LEAD_TMP LEAD
  LEFT JOIN TAB_PROC_DEPARA_DASH DD
    ON LEAD.TMA = DD.CDTMA;
COMMIT;

--Acrescentando 0 à esquerda

UPDATE TAB_PROC_LEAD_HIST
   SET CPF = LPAD(CPF,11,'0')
 WHERE LENGTH(CPF) < 11;
COMMIT;

DROP TABLE TAB_PROC_LEAD_VENDA;

CREATE TABLE TAB_PROC_LEAD_VENDA AS
SELECT A.*
     , ROW_NUMBER () OVER (PARTITION BY CPF, DATA_CRIACAO ORDER BY DIAS_ATE_COMPRA) ROWNO_CPF
  FROM  (
          SELECT LEADS.CPF
               , LEADS.DATA_CRIACAO
               , LEADS.ROWNO AS ROWNO_LEAD
               , LEADS.ID_SEQUENCIAL
               , LEADS.CODIGO_OPORTUNIDADE
               , VR.DTPURCHASE
               , TRUNC(TO_DATE(VR.DTPURCHASE,'DD/MM/YY')) - TRUNC(LEADS.DATA_CRIACAO) AS DIAS_ATE_COMPRA
               , VR.IDVEHICLEHOLDER
               , VR.IDVEHICLE
               , VR.FLSTILLOWNED
               , VF.DSVIN
               , TMA.CDTMA
               , TMA.MODELO_FE AS MODELO_COMPRA
               , VF.IDDEALERDELIVER
               , VR.IDDEALER
               , TRUNC(MONTHS_BETWEEN (LAST_DAY(SYSDATE),(LAST_DAY(DTPURCHASE)))) AS TEMPO_OWNED
               , ROW_NUMBER () OVER (PARTITION BY VR.IDVEHICLE ORDER BY TO_DATE(DATA_CRIACAO,'DD/MM/YY'),LEADS.ROWNO) ROWNO
            FROM  (
                    SELECT DISTINCT CPF
                         , DATA_CRIACAO
                         , ROWNO
                         , ID_SEQUENCIAL
                         , CODIGO_OPORTUNIDADE
                      FROM TAB_PROC_LEAD_HIST LEADS
                     WHERE CPF IS NOT NULL
                   ) LEADS
           INNER JOIN FORD.INDIVIDUAL I
              ON LEADS.CPF = I.CPF
           INNER JOIN FORD.VEHICLERELATIONSHIP VR
              ON I.IDINDIVIDUAL = VR.IDVEHICLEHOLDER
           INNER JOIN FORD.VEHICLE V
              ON VR.IDVEHICLE = V.IDVEHICLE
           INNER JOIN FORD.VEHICLEFACT VF
              ON V.IDVEHICLE = VF.IDVEHICLE
           INNER JOIN TAB_PROC_DEPARA_DASH TMA
              ON VF.CDTMA = TMA.CDTMA
            LEFT JOIN ( 
			            SELECT DISTINCT IDVEHICLE
                          FROM TAB_PROC_VEND_HIST
					  )VEN
              ON VR.IDVEHICLE = VEN.IDVEHICLE
           WHERE DTPURCHASE <= SYSDATE
             AND TO_DATE(VR.DTPURCHASE,'DD/MM/YY') >= TO_DATE(LEADS.DATA_CRIACAO,'DD/MM/YY')
             AND MONTHS_BETWEEN (TO_DATE(VR.DTPURCHASE,'DD/MM/YY'),TO_DATE(LEADS.DATA_CRIACAO,'DD/MM/YY')) <= 3 --Apenas 3 meses de maturação
             AND TO_DATE(LEADS.DATA_CRIACAO) >= TRUNC(ADD_MONTHS(SYSDATE,-4),'MM') --Apenas meses ainda não maturados
             AND (VR.IDDATASOURCE = 1 OR VR.IDCREATESOURCE = 1)
             AND FLFIRSTOWNER = 'S'
             AND VEN.IDVEHICLE IS NULL
          ) A
 WHERE ROWNO = 1;

INSERT INTO TAB_PROC_VEND_HIST
SELECT CPF
     , DATA_CRIACAO
     , ROWNO_LEAD
     , DTPURCHASE
     , DIAS_ATE_COMPRA
     , IDVEHICLEHOLDER
     , IDVEHICLE
     , FLSTILLOWNED
     , DSVIN
     , CDTMA
     , MODELO_COMPRA
     , IDDEALERDELIVER
     , IDDEALER
     , TEMPO_OWNED
     , ROWNO
     , ROWNO_CPF
     , ID_SEQUENCIAL
     , CODIGO_OPORTUNIDADE
  FROM TAB_PROC_LEAD_VENDA;    
COMMIT;

--Gerando a base final
    
  DROP TABLE TMP_PROC_LEAD_FINAL;

CREATE TABLE TMP_PROC_LEAD_FINAL AS
SELECT TO_CHAR(LEAD.DATA_CRIACAO,'DD/MM/YYYY') AS DATA_CRIACAO
     , COUNT (1) AS QTD_LEADS
     , SUM(NVL(VEN.QTD_VENDAS,0)) AS QTD_VENDAS
     , NVL(DP_ORG.ORIGEM_PARA,'Origem Não Encontrada') AS ORIGEM
     , TEMPO_ATENDIMENTO
  FROM TAB_PROC_LEAD_HIST LEAD
  LEFT JOIN 
    (
      SELECT ID_SEQUENCIAL, COUNT(IDVEHICLE) AS QTD_VENDAS
        FROM TAB_PROC_VEND_HIST
       GROUP BY ID_SEQUENCIAL
    ) VEN
    ON LEAD.ID_SEQUENCIAL = VEN.ID_SEQUENCIAL
  LEFT JOIN AUX_DEPARA_ORIGEM_LEADS_FMC DP_ORG
    ON LEAD.ORIGEM = DP_ORG.ORIGEM_DE
 GROUP BY TO_CHAR(LEAD.DATA_CRIACAO,'DD/MM/YYYY')
     , NVL(DP_ORG.ORIGEM_PARA,'Origem Não Encontrada')
     , TEMPO_ATENDIMENTO;

--Extração da contagem

SELECT *
  FROM TMP_PROC_LEAD_FINAL;
    
--Visão de vendas por origem do Lead

   
SELECT INITCAP(NVL(NVL(VENDA.MODELO_COMPRA,LEAD.MODELO_INTERESSE),'Não Disponível')) as NAMEPLATE
     , NVL(DP_ORG.ORIGEM_PARA,'Origem Não Encontrada') AS ORIGEM
     , LEAD.DATA_CRIACAO
     , COUNT(DISTINCT LEAD.ID_SEQUENCIAL) AS QTD_LEAD
     , NVL(SUM(VENDA.QTD_VENDAS),0) AS QTD_VENDAS
     ,VENDA.IDDEALER AS IDDEALER
  FROM TAB_PROC_LEAD_HIST LEAD
  LEFT JOIN (
            SELECT ID_SEQUENCIAL,MODELO_COMPRA,COUNT(DISTINCT IDVEHICLE) AS QTD_VENDAS
                    ,IDDEALER
              FROM TAB_PROC_VEND_HIST
             GROUP BY ID_SEQUENCIAL,MODELO_COMPRA,IDDEALER
            ) VENDA
    ON LEAD.ID_SEQUENCIAL = VENDA.ID_SEQUENCIAL
  LEFT JOIN AUX_DEPARA_ORIGEM_LEADS_FMC DP_ORG
    ON LEAD.ORIGEM = DP_ORG.ORIGEM_DE
 GROUP BY INITCAP(NVL(NVL(VENDA.MODELO_COMPRA,LEAD.MODELO_INTERESSE),'Não Disponível'))
     , NVL(DP_ORG.ORIGEM_PARA,'Origem Não Encontrada')
     , LEAD.DATA_CRIACAO
     , VENDA.QTD_VENDAS
     , VENDA.IDDEALER;